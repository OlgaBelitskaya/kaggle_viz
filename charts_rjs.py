# -*- coding: utf-8 -*-
"""charts-rjs.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/17kPMT0X_NKOzyGHifSXAnWsiYUxHcWX5
"""

source('../input/r-recipes/header_styling.R')
dhtml('Code Modules')

library(IRdisplay); library(tidyverse)

dhtml('With Arrays & Functions')

html_str<-"
<script src='https://code.highcharts.com/highcharts.js'></script>
<div id='chartdiv001' style='height:600px; width:650px; margin:0 auto'></div>
<script>
var series=[]; var d=.001; var i; var n=3; 
function randi(min,max) {return Math.floor(Math.random()*(max-min+1))+min;};
function ar(k,a,b) {return Array(6400).fill(k).map((k,t)=>
    [k*(Math.cos(d*t)+Math.sin(a*d*t)/2-Math.cos(b*d*t)/6),
     k*(Math.sin(d*t)+Math.cos(a*d*t)/2-Math.sin(b*d*t)/6)]);};
function col(i) {var r=randi(i,255),g=randi(i,255),b=randi(i,255);
                 return 'rgb('+r+','+g+','+b+')';}; 
var a=randi(7,19),b=randi(18,64);
for (i=1; i<n+1; i++) {
    series.push({name:i,color:col(i),lineWidth:.5,data:ar(i,a,b)})};
Highcharts.chart('chartdiv001',{
    chart:{type:'line',backgroundColor:'mintcream'},
    xAxis:{title:{text:'x'}},yAxis:{title:{text:'y'}},
    title:{text:'a,b = '+[a,b]},series:series,
    credits:{enabled:false},legend:{enabled:false}});
</script>"
html_str<-paste(as.character(html_str),collapse='\n')
file_name<-paste0(c('chart',sample(1:999,1),'.html'),collapse='')
write.table(html_str,file=file_name,
            quote=FALSE,col.names=FALSE,row.names=FALSE)
display_html(paste0(c(
    "<div id='d001'><iframe src='",file_name,
    "' height='630' width='680'></iframe></div>"),collapse=''))

dhtml('With CSV Strings & Other Data Objects')

html_str<-"<script src='https://www.gstatic.com/charts/loader.js'>
</script></script><script src='https://d3js.org/d3.v5.js'></script>
<script type='text/javascript'>
google.charts.load('current',{'packages':['corechart']});
google.charts.setOnLoadCallback(drawChart);
const st=`x,y,z
1.418,-1.494,-2.541
1.259,-1.563,-2.426
1.236,-1.686,-2.711
1.409,-1.614,-2.865
1.225,-1.777,-2.939`;
const xyz=d3.csvParse(st,d3.autoType);
var x=[],y=[],z=[];
for (var i=0; i<5; i++){
  x.push(xyz[i]['x']); 
  y.push(xyz[i]['y']); 
  z.push(xyz[i]['z'])};
function drawChart() {
  var data=new google.visualization.DataTable();
  data.addColumn('number','id'); data.addColumn('number','v1');
  data.addColumn('number','v2'); data.addColumn('number','v3');
  for (var i=0; i<5; i++){
      data.addRow([i+1,x[i],y[i],z[i]]);};
  var options={'title':'Charts with DataTables',
               'width':650,'height':500};
  var doc=document.getElementById('chartdiv002');
  var chart=new google.visualization.AreaChart(doc);
  chart.draw(data,options);}
</script><div id='chartdiv002'></div>"
html_str<-paste(as.character(html_str),collapse='\n')
file_name<-paste0(c('chart',sample(1:999,1),'.html'),collapse='')
write.table(html_str,file=file_name,
            quote=FALSE,col.names=FALSE,row.names=FALSE)
display_html(paste0(c(
    "<div id='d002'><iframe src='",file_name,
    "' height='530' width='680'></iframe></div>"),collapse=''))

"""## With CSV Files"""

dhtml('With Chart Building')

html_str<-"
<style>@import 'https://fonts.googleapis.com/css?family=Wallpoet';
#divtitle {color:silver; font-family:Wallpoet; font-size:20px}
</style><script src='https://d3js.org/d3.v6.min.js'>
</script><div id='chartdiv003'><text id='divtitle'></text></div><script>
var data=[4,12,21,38,42,55];
var tc=setInterval(function(){
    var now=new Date().getTime();
    var font_size=20,height=12*font_size;
    var width=.6*Math.max(window.screen.width,window.innerWidth);
    var div=d3.select('#chartdiv003')
              .attr('width',width).attr('height',height+'px')
    div.select('#divtitle')
       .text('An Example of D3 Histograms');
    div.style('text-align','right')
       .style('text-shadow','3px 3px 3px slategray')
       .style('padding','5px')
       .style('color',d3.interpolateSinebow(now/1000000))
       .style('background',d3.interpolateSinebow(now/1000000));
    var x=d3.scaleLinear().domain([0,d3.max(data)]).range([0,.8*width])
    div.selectAll('div').data(data).join('div')
       .style('background','silver')
       .style('padding','5px').style('margin','1px')
       .style('width',d=>x(d)+'px')
       .style('font-family','Wallpoet')
       .style('font-size',font_size+'px')
       .text(d=>d);},100);
</script>"
html_str<-paste(as.character(html_str),collapse='\n')
file_name<-paste0(c('chart',sample(1:999,1),'.html'),collapse='')
write.table(html_str,file=file_name,
            quote=FALSE,col.names=FALSE,row.names=FALSE)
display_html(paste0(c(
    "<div id='d003'><iframe src='",file_name,
    "' height='240px' width='100%'></iframe></div>"),collapse=''))

dhtml('In Progress')

n<-24
colors<-c("#d35400","#2980b9","#2ecc71","#f1c40f","#2c3e50","#7f8c8d",
         "#000004","#3B0F70","#8C2981","#DE4968","#FE9F6D","#FCFDBF")
df<-data.frame(t=seq_len(n)) %>% 
  mutate(
    x=round((cos(4*t))*cos(t),2),
    y=round((1+cos(4*t))*sin(t),2),
    name=sample(fruit[str_length(fruit)<=6],size=n),
    color=rep(colors,length.out=n))
head(df)

fp<-'https://olgabelitskaya.github.io/huge_cities.tsv'
hcity<-data.frame(read.csv(fp,header=T,sep='\t'))
t(head(hcity,3))