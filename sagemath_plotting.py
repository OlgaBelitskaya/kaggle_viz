# -*- coding: utf-8 -*-
"""sagemath-plotting.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/16JGfLN_AWw9RHyBt1KVBEfK7WBUXUtW6
"""

# Commented out IPython magic to ensure Python compatibility.
# %run ../input/python-recipes/dhtml.py
# %run ../input/python-recipes/sage_call.py
dhtml('2D Plotting with SageMathCell')

# Commented out IPython magic to ensure Python compatibility.
# %sage_autorun \
@interact \
def _(a=[7..11],b=[10..18]): \
    x(t)=cos(t)+cos(a*t)/2+sin((a+b)*t)/3 \
    y(t)=sin(t)+sin(a*t)/2+cos((a+b)*t)/3 \
    def col(c): return colormaps.hsv(5*c)[:3] \
    p=sum([parametric_plot((x,y), \
                           (t,(i-1)*pi/24,i*pi/24), \
                            color=col(i)) for i in [1..48]]) \
    p.show(aspect_ratio=1,figsize=5,gridlines=True)

# Commented out IPython magic to ensure Python compatibility.
# %sage_run \
el=["ðŸ˜¸","ðŸ˜¹","ðŸ˜»","ðŸ˜¼","ðŸ˜½","ðŸ˜¾","ðŸ˜¿","ðŸ™€"] \
var('t,k'); n=randint(16,36) \
a,b,c=randint(5,12),randint(13,24),2*randint(3,6) \
str1='=>=>=>Fortune Telling on a Chamomile' \
col=Color(1,random(),random()).html_color() \
str2='<p style="font-size:150%; color:' \
pretty_print(html(str2+col+'">'+str1+'</p>')) \
fy(t,k)=cos(pi*t/n+2*k*pi/c)+\ \
        cos(a*pi*t/n+2*k*pi/c)+\ \
        cos(b*pi*t/n+2*k*pi/c) \
fx(t,k)=sin(pi*t/n+2*k*pi/c)-\ \
        sin(a*pi*t/n+2*k*pi/c)+\ \
        sin(b*pi*t/n+2*k*pi/c) \
L=[[[fx(t,k),fy(t,k)]  \
    for t in range(2*n)] for k in range(2*c)] \
p=sum([polygon2d(L[i],color=(1,random(),random()), \
                 thickness=.5,alpha=.075,axes=False)  \
       for i in range(2*c)]) \
p+text(el[randint(0,len(el)-1)], \
       (0,0),fontsize=80,color=col)

dhtml('3D Plotting with SageMathCell')

# Commented out IPython magic to ensure Python compatibility.
# %sage_autorun \
@interact \
def _(colormap=['bwr','cool','prism', \
                'jet','terrain','flag', \
                'ocean','hsv','bone']): \
    def c(cm): \
        return [colormaps[cm](12*i)[:3]  \
                for i in [1..20]] \
    g=icosahedron().stickers(c(colormap),.05,.05) \
    g.show(frame=False)

# Commented out IPython magic to ensure Python compatibility.
# %sage_run \
var('u,v'); u_min,u_max=0,2*pi; v_min,v_max=0,pi \
f_x=(2+cos(u))*cos(v)^3*sin(v) \
f_y=(2+cos(u+2*pi/3))*cos(v+2*pi/3)^2*sin(v+2*pi/3)^2 \
f_z=(2+cos(u-2*pi/3))*cos(v+2*pi/3)^2*sin(v+2*pi/3)^2 \
sum([parametric_plot3d([f_x*i,f_y*j,f_z*k], \
                       (u_min,u_max),(v_min,v_max), \
                       plotpoints=100,color='cyan', \
                       opacity=.4,mesh=True,frame=False)  \
     for i in [-1,1] for j in [-1,1] for k in [-1,1]])

dhtml('Editable Code Cells')

# Commented out IPython magic to ensure Python compatibility.
# %sage_coderun 530 300