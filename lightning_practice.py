# -*- coding: utf-8 -*-
"""lightning-practice.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1kSCGLPHwFSULqLEkp4WiEL4iV3JBrkI0
"""

!pip install lightning-python --user

# Commented out IPython magic to ensure Python compatibility.
# %run ../input/python-recipes/dhtml.py
dhtml('File Writing')

# Commented out IPython magic to ensure Python compatibility.
# %%writefile light_plots.py
# import numpy as np,pandas as pd,pylab as pl
# from IPython.core.display import display
# from sklearn.preprocessing import \
# MinMaxScaler as mms
# from lightning import Lightning
# 
# def lightning_connect(connect):
#     host='https://public.lightning-viz.org'
#     if connect:
#         lgn=Lightning(ipython=True,host=host)
#     else:
#         lgn=Lightning(ipython=True,local=True)
#     return lgn
# 
# def light_line(lgn,file_path,file_name,
#                lw=1,cmap='hsv',w=680,h=300):
#     series=np.loadtxt(
#         file_path+file_name,delimiter=',',skiprows=1)
#     if series.shape[0]>series.shape[1]:
#         series=series.T
#     c=np.array([pl.cm.get_cmap(cmap)(i/3)[:3]
#                 for i in range(3)])
#     c=np.array(255*c,dtype='int32')
#     viz=lgn.line(series,color=c,thickness=lw,
#                  width=w,height=h)
#     display(viz)
#     
# def light_scatter(lgn,file_path,file_name,
#                   x,y,value,size,label,cmap,
#                   w=680,h=300,sep='\t'):
#     data=pd.read_csv(file_path+file_name,sep=sep)
#     size_array=data[size].values.reshape(-1,1)
#     scaler=mms(feature_range=(3,15)).fit(size_array)
#     size_array=scaler.transform(size_array)
#     viz=lgn.scatter(data[x].values,data[y].values,
#                     values=data[value].values,
#                     labels=data[label].values,
#                     size=size_array.reshape(-1),
#                     colormap=cmap,width=w,height=h)
#     display(viz)

dhtml('File Usage')

# Commented out IPython magic to ensure Python compatibility.
# %run light_plots.py
lgn=lightning_connect(False)

file_path='../input/image-examples-for-mixed-styles/'
file_name='beethoven.csv'
light_line(lgn,file_path,file_name)

file_path='../input/geodata-for-exercises/'
file_name='huge_cities.tsv'
y='latitude'; x='longitude'; 
value='growth'; size='y_2014'; 
label='city'; cmap='Spectral'
light_scatter(lgn,file_path,file_name,
              x,y,value,size,label,cmap)

dhtml('Quick Local Examples')

import numpy as np
from IPython.core.display import display
data=np.random.rand(64,64)
data[data<0.98]=0
lgn.force(data)

us_states=["NA","AK","AL","AR","AZ","CA","CO","CT",
           "DC","DE","FL","GA","HI","IA","ID","IL","IN",
           "KS","KY","LA","MA","MD","ME","MI","MN","MO",
           "MS","MT","NC","ND","NE","NH","NJ","NM","NV",
           "NY","OH","OK","OR","PA","RI","SC","SD","TN",
           "TX","UT","VA","VI","VT","WA","WI","WV","WY"]
data=np.random.randn(len(us_states))
lgn.map(us_states,data,colormap='Lightning')

[x,y,z]=[np.random.rand(30) 
         for i in range(3)]
lgn.scatter3(x,y,z,size=3)